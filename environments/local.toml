[server]
  host = "127.0.0.1"
  port = 3008
  kind = "active"

  # Checkpointing state.
  checkpointing = true

  # Checkpoint interval in number of blocks.
  checkpointInterval = 2000

  # Enable state creation
  # CAUTION: Disable only if state creation is not desired or can be filled subsequently
  enableState = false

  subgraphPath = "./subgraph-build"

  # Interval to restart wasm instance periodically
  wasmRestartBlocksInterval = 20

  # Interval in number of blocks at which to clear entities cache.
  clearEntitiesCacheInterval = 1000

  # Boolean to filter logs by contracts.
  filterLogsByAddresses = false

  # Boolean to filter logs by topics.
  filterLogsByTopics = true

  # Boolean to switch between modes of processing events when starting the server.
  # Setting to true will fetch filtered events and required blocks in a range of blocks and then process them
  # Setting to false will fetch blocks consecutively with its events and then process them (Behaviour is followed in realtime processing near head)
  useBlockRanges = true

  # Max block range for which to return events in eventsInRange GQL query.
  # Use -1 for skipping check on block range.
  maxEventsBlockRange = 1000

  # Flag to specify whether RPC endpoint supports block hash as block tag parameter
  rpcSupportsBlockHashParam = false

  # GQL cache settings
  [server.gqlCache]
    enabled = true

    # Max in-memory cache size (in bytes) (default 8 MB)
    # maxCacheSize

    # GQL cache-control max-age settings (in seconds)
    maxAge = 15
    timeTravelMaxAge = 86400 # 1 day

[metrics]
  host = "127.0.0.1"
  port = 9000
  [metrics.gql]
    port = 9001

[database]
  type = "postgres"
  host = "localhost"
  port = 5432
  database = "sushiswap-v3-watcher-ts"
  username = "postgres"
  password = "postgres"
  synchronize = true
  logging = false

[upstream]
  [upstream.ethServer]
    # gqlApiEndpoint = "http://127.0.0.1:8082/graphql"
    rpcProviderEndpoint = "http://127.0.0.1:8081"

    # Flag to specify if rpc-eth-client should be used from RPC endpoint instead of ipld-eth-client (ipld-eth-server GQL client)
    rpcClient = true

  [upstream.cache]
    name = "requests"
    enabled = false
    deleteOnStart = false

[jobQueue]
  dbConnectionString = "postgres://postgres:postgres@localhost/sushiswap-v3-watcher-ts-job-queue"
  maxCompletionLagInSecs = 300
  jobDelayInMilliSecs = 100
  eventsInBatch = 50
  subgraphEventsOrder = true
  blockDelayInMilliSecs = 2000
  prefetchBlocksInMem = false
  prefetchBlockCount = 10
